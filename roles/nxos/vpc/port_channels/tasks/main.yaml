---
#  Create the Virtual Port Channels (VPCs) and assign interfaces

# Create the portchannel interface, add properties
- name: Create port-channels interfaces with properties
  cisco.nxos.nxos_interfaces:
    config:
      - name: "port-channel{{ item.portchannel }}"
        description: "{{ item.description }}"
        enabled: "{{ item.enabled }}"
        mode: "{{ item.type }}"
    state: replaced
  loop: "{{ vpc_intf_common }}"

# Configure the portchannels
- name: Aggregate interfaces into port-channels
  cisco.nxos.nxos_lag_interfaces:
    config:
      - name: "{{ item.name }}"
        members: "{{ item.members }}"
    state: replaced
  loop: "{{ vpc_intf_local }}"

# Enable VPC settings
- name: Identify the VPC Peer Link
  cisco.nxos.nxos_vpc_interface:
    portchannel: "{{ item.portchannel }}"
    peer_link: true
    state: "{{ item.state }}"
  loop: "{{ vpc_intf_common }}"
  when: item.vpc == "peer-link"

- name: Declare port-channels to be VPCs
  cisco.nxos.nxos_vpc_interface:
    portchannel: "{{ item.portchannel }}"
    vpc: "{{ item.vpc }}"
    state: "{{ item.state }}"
  loop: "{{ vpc_intf_common }}"
  when: item.vpc != "peer-link"

# Add VLANs to the port channels
- name: Assign Layer 2 trunk characteristics to the VPCs
  cisco.nxos.nxos_l2_interfaces:
    config:
      - name: "port-channel{{ item.portchannel }}"
        mode: trunk
        trunk:
          native_vlan: "{{ item.native_vlan }}"
          allowed_vlans: "{{ item.allowed_vlans | default | fabric_vlans | attr('vlan_id') | list | join(',') }}"
    state: merged
  loop: "{{ vpc_intf_common }}"
  when:
    - item.mode == "trunk"

- name: Assign Layer 2 access port characteristics to the VPCs
  cisco.nxos.nxos_l2_interfaces:
    config:
      - name: "port-channel{{ item.portchannel }}"
        access:
          vlan: "{{ item.native_vlan }}"
    state: merged
  loop: "{{ vpc_intf_common }}"
  when:
    - item.mode == "access"
